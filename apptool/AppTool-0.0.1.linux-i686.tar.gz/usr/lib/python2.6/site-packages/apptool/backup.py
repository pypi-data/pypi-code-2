#!/usr/bin/env python
#
# AppTool
# Copyright (C) 2010  Nathan Forbes
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

import os
import sys
import pwd
import shutil

import common
import cli

home = common.mainWorkDir()

def generateTextInfo():
  a = os.linesep.join(os.listdir(os.path.join(home, 'Apps', 'app')))
  p = os.linesep.join(os.listdir(os.path.join(home, 'Apps', 'app-private')))
  try:
    f = open(os.path.join(home, 'BACKUP_INFO'), 'w')
    try:
      f.write(
         'Thanks for using AppTool!'
         + os.linesep + os.linesep
         + '=' * 60 + os.linesep + os.linesep
         + 'Backed up apps:' + os.linesep
         + os.linesep + a + p + os.linesep
         + os.linesep + '=' * 60
      )
    except (IOError, OSError), e:
      cli.warning(str(e))
  finally:
    f.close()

def backupApps():
  try:
    if os.path.isdir(home):
      shutil.rmtree(home)
    os.makedirs(home)
    cli.message("Attempting to pull apps from device")
    common.adbPull(os.path.join(home, 'Apps'))
    cli.message("Generating text information")
    generateTextInfo()
    filename = '%s_AppBackup.zip' % (pwd.getpwuid(os.getuid()).pw_name)
    cli.message("Compressing backed up apps")
    mkzip = common.ZipUtil(zipwrite=True, zipname=os.path.join(home, filename))
    mkzip.work()
    if os.path.isfile(os.path.join(home, filename)):
      cli.success("Apps backed up successfully")
      shutil.rmtree(os.path.join(home, 'Apps'))
    else:
      cli.error("Backup failed")
  except:
    cli.warning("Aborting...")
    shutil.rmtree(home)
